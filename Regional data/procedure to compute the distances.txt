Procedure to compute italian distances 
Firstly, we downloaded the Italian roads graph, then we selected only the main roads, namely: motorways, trunk, primary, secondary and tertiary.
Secondly, we downloaded the shapefile coast-line and we created a buffer of 2000 meters around it. We selected the roads inside the buffer and we converted the lines in points, obtaining more then 3000000 points. We randomly extracted 10000 of them and we used them as “access to the sea”.
Thirdly, we imported in QGIS the Italian municipalities. 
To compute the fastest distances, we used the tool OD matrix of the plugin QNEAT3.
https://root676.github.io/OdMatrixAlgs.html
https://www.qgistutorials.com/en/docs/3/origin_destination_matrix.html

Procedure:
*Always create spatial index for each layer
1.	Set speed for each road category:
Code:
CASE WHEN "fclass" = 
'motorway' THEN 100 WHEN "fclass" = 
'motorway_link' THEN 100 WHEN "fclass" = 
'trunk' THEN 90 WHEN "fclass" = 
'trunk_link' THEN 90 WHEN "fclass" = 
'primary' THEN 70 WHEN "fclass" = 
'primary_link' THEN 70 WHEN "fclass" = 
'secondary' THEN 50 WHEN "fclass" = 
'secondary_link' THEN 50 WHEN "fclass" = 
'tertiary' THEN 30 WHEN "fclass" = 
'tertiary_link' THEN 30 END
2.	OD matrix from Layers as Lines (m:n)
Parameters: 
Network layer -> main roads
From point-layer -> municipalities
Unique point ID -> istat
To point-layer -> accesses
Unique point ID -> osm_id
Optimization criterion -> fastest path 
Entry cost calculation method -> ellipsoidal
Direction field -> oneway
Value for forward -> F
Value for backward -> \
Value for both -> B
Speed field -> speed
Tolerance -> 0.000150
3.	Esegui SQL
Input: OD matrix
Code: 
select origin_id, destination_id, min(total_cost) as shortest_distance, geometry
from input1 group by origin_id

Geometry field -> geometry
Geometry type -> LineString

4.	Check data and delate doubles 
5.	Check correspondence in google maps for few of them
6.	Export data both in shapefile and csv


